import { GameState, GameStatus } from '../game-types';

interface GameSpec {
  readonly word: string;
  readonly guesses: string;
  readonly maxWrongGuesses: number;
  readonly gameStates: GameState[];
}

const PerfectWinSpec: GameSpec = {
  word: 'hangman',
  guesses: 'hngmna',
  maxWrongGuesses: 6,
  gameStates: [
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['h'],
      display: ['h', '_', '_', '_', '_', '_', '_'],
      numberOfGuessesRemaining: 6,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['h', 'n'],
      display: ['h', '_', 'n', '_', '_', '_', 'n'],
      numberOfGuessesRemaining: 6,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['h', 'n', 'g'],
      display: ['h', '_', 'n', 'g', '_', '_', 'n'],
      numberOfGuessesRemaining: 6,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['h', 'n', 'g', 'm'],
      display: ['h', '_', 'n', 'g', 'm', '_', 'n'],
      numberOfGuessesRemaining: 6,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['h', 'n', 'g', 'm'],
      display: ['h', '_', 'n', 'g', 'm', '_', 'n'],
      numberOfGuessesRemaining: 6,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['h', 'n', 'g', 'm', 'a'],
      display: ['h', 'a', 'n', 'g', 'm', 'a', 'n'],
      numberOfGuessesRemaining: 6,
      status: GameStatus.Won,
    },
  ],
};

const PerfectLossSpec: GameSpec = {
  word: 'hangman',
  guesses: 'zxcvbo',
  maxWrongGuesses: 6,
  gameStates: [
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z'],
      display: ['_', '_', '_', '_', '_', '_', '_'],
      numberOfGuessesRemaining: 5,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'x'],
      display: ['_', '_', '_', '_', '_', '_', '_'],
      numberOfGuessesRemaining: 4,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'x', 'c'],
      display: ['_', '_', '_', '_', '_', '_', '_'],
      numberOfGuessesRemaining: 3,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'x', 'c', 'v'],
      display: ['_', '_', '_', '_', '_', '_', '_'],
      numberOfGuessesRemaining: 2,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'x', 'c', 'v', 'b'],
      display: ['_', '_', '_', '_', '_', '_', '_'],
      numberOfGuessesRemaining: 1,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'x', 'c', 'v', 'b', 'o'],
      display: ['_', '_', '_', '_', '_', '_', '_'],
      numberOfGuessesRemaining: 0,
      status: GameStatus.Lost,
    },
  ],
};

const WinningGameSpec: GameSpec = {
  word: 'hangman',
  guesses: 'zacnhhtgm',
  maxWrongGuesses: 6,
  gameStates: [
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z'],
      display: ['_', '_', '_', '_', '_', '_', '_'],
      numberOfGuessesRemaining: 5,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'a'],
      display: ['_', 'a', '_', '_', '_', 'a', '_'],
      numberOfGuessesRemaining: 5,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'a', 'c'],
      display: ['_', 'a', '_', '_', '_', 'a', '_'],
      numberOfGuessesRemaining: 4,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'a', 'c', 'n'],
      display: ['_', 'a', 'n', '_', '_', 'a', 'n'],
      numberOfGuessesRemaining: 4,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'a', 'c', 'n', 'h'],
      display: ['h', 'a', 'n', '_', '_', 'a', 'n'],
      numberOfGuessesRemaining: 4,
      status: GameStatus.InProgress,
    },
    // duplicate guess 'h' - state won't change...
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'a', 'c', 'n', 'h'],
      display: ['h', 'a', 'n', '_', '_', 'a', 'n'],
      numberOfGuessesRemaining: 4,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'a', 'c', 'n', 'h', 't'],
      display: ['h', 'a', 'n', '_', '_', 'a', 'n'],
      numberOfGuessesRemaining: 3,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'a', 'c', 'n', 'h', 't', 'g'],
      display: ['h', 'a', 'n', 'g', '_', 'a', 'n'],
      numberOfGuessesRemaining: 3,
      status: GameStatus.InProgress,
    },
    {
      word: 'hangman',
      maxGuesses: 6,
      guesses: ['z', 'a', 'c', 'n', 'h', 't', 'g', 'm'],
      display: ['h', 'a', 'n', 'g', 'm', 'a', 'n'],
      numberOfGuessesRemaining: 3,
      status: GameStatus.Won,
    },
  ],
};

const LosingGameSpec: GameSpec = {
  word: 'sacrification',
  guesses: 'afbtmkiwohsp',
  maxWrongGuesses: 6,
  gameStates: [
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a'],
      display: [
        '_',
        'a',
        '_',
        '_',
        '_',
        '_',
        '_',
        '_',
        'a',
        '_',
        '_',
        '_',
        '_',
      ],
      numberOfGuessesRemaining: 6,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f'],
      display: [
        '_',
        'a',
        '_',
        '_',
        '_',
        'f',
        '_',
        '_',
        'a',
        '_',
        '_',
        '_',
        '_',
      ],
      numberOfGuessesRemaining: 6,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f', 'b'],
      display: [
        '_',
        'a',
        '_',
        '_',
        '_',
        'f',
        '_',
        '_',
        'a',
        '_',
        '_',
        '_',
        '_',
      ],
      numberOfGuessesRemaining: 5,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f', 'b', 't'],
      display: [
        '_',
        'a',
        '_',
        '_',
        '_',
        'f',
        '_',
        '_',
        'a',
        't',
        '_',
        '_',
        '_',
      ],
      numberOfGuessesRemaining: 5,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f', 'b', 't', 'm'],
      display: [
        '_',
        'a',
        '_',
        '_',
        '_',
        'f',
        '_',
        '_',
        'a',
        't',
        '_',
        '_',
        '_',
      ],
      numberOfGuessesRemaining: 4,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f', 'b', 't', 'm', 'k'],
      display: [
        '_',
        'a',
        '_',
        '_',
        '_',
        'f',
        '_',
        '_',
        'a',
        't',
        '_',
        '_',
        '_',
      ],
      numberOfGuessesRemaining: 3,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f', 'b', 't', 'm', 'k', 'i'],
      display: [
        '_',
        'a',
        '_',
        '_',
        'i',
        'f',
        'i',
        '_',
        'a',
        't',
        'i',
        '_',
        '_',
      ],
      numberOfGuessesRemaining: 3,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f', 'b', 't', 'm', 'k', 'i', 'w'],
      display: [
        '_',
        'a',
        '_',
        '_',
        'i',
        'f',
        'i',
        '_',
        'a',
        't',
        'i',
        '_',
        '_',
      ],
      numberOfGuessesRemaining: 2,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f', 'b', 't', 'm', 'k', 'i', 'w', 'o'],
      display: [
        '_',
        'a',
        '_',
        '_',
        'i',
        'f',
        'i',
        '_',
        'a',
        't',
        'i',
        'o',
        '_',
      ],
      numberOfGuessesRemaining: 2,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f', 'b', 't', 'm', 'k', 'i', 'w', 'o', 'h'],
      display: [
        '_',
        'a',
        '_',
        '_',
        'i',
        'f',
        'i',
        '_',
        'a',
        't',
        'i',
        'o',
        '_',
      ],
      numberOfGuessesRemaining: 1,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f', 'b', 't', 'm', 'k', 'i', 'w', 'o', 'h', 's'],
      display: [
        's',
        'a',
        '_',
        '_',
        'i',
        'f',
        'i',
        '_',
        'a',
        't',
        'i',
        'o',
        '_',
      ],
      numberOfGuessesRemaining: 1,
      status: GameStatus.InProgress,
    },
    {
      word: 'sacrification',
      maxGuesses: 6,
      guesses: ['a', 'f', 'b', 't', 'm', 'k', 'i', 'w', 'o', 'h', 's', 'p'],
      display: [
        's',
        'a',
        '_',
        '_',
        'i',
        'f',
        'i',
        '_',
        'a',
        't',
        'i',
        'o',
        '_',
      ],
      numberOfGuessesRemaining: 0,
      status: GameStatus.Lost,
    },
  ],
};

export type { GameSpec };
export { WinningGameSpec, PerfectLossSpec, PerfectWinSpec, LosingGameSpec };
